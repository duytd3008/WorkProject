WITH 
  MY_TEMP_1 AS (
  SELECT * FROM `ad_hoc.data_retention_daily` as L
  ),

  MY_TEMP_2 AS (
  SELECT * FROM `ad_hoc.data_retention_daily` as L
  where L.Group != 'G' and L.Group != 'H'),

--Group A-F - MY_TEMP_3
  MY_TEMP_3 AS
  (SELECT *, 
  CONCAT(format_date("%Y-%m", partial_return_date),'-W',
  (CASE WHEN extract(day from partial_return_date) >= 1 AND extract(day from partial_return_date) < 8 THEN 1 
  WHEN extract(day from partial_return_date) >= 8 AND extract(day from partial_return_date) < 15 THEN 2
  WHEN extract(day from partial_return_date) >= 15 AND extract(day from partial_return_date) < 22 THEN 3
  ELSE 4 END )) AS WEEK_NUM 
  FROM MY_TEMP_2),

--Group Total - MY_TEMP_4
  MY_TEMP_4 AS
  (SELECT *, 
  CONCAT(format_date("%Y-%m", partial_return_date),'-W',
  (CASE WHEN extract(day from partial_return_date) >= 1 AND extract(day from partial_return_date) < 8 THEN 1 
  WHEN extract(day from partial_return_date) >= 8 AND extract(day from partial_return_date) < 15 THEN 2
  WHEN extract(day from partial_return_date) >= 15 AND extract(day from partial_return_date) < 22 THEN 3
  ELSE 4 END )) AS WEEK_NUM 
  FROM MY_TEMP_1)

--TABLE WEEK
  ,TABLE_WEEK_01 AS 
  (  
    SELECT WEEK_NUM,MONTH, SUM(REVENUE) AS REVENUE_A_F FROM MY_TEMP_3
    GROUP BY WEEK_NUM,MONTH
    ORDER BY WEEK_NUM DESC
  )
  ,TABLE_WEEK_02 AS 
  (
    SELECT WEEK_NUM,MONTH, SUM(REVENUE) AS TOTAL_REVENUE FROM MY_TEMP_4
    GROUP BY WEEK_NUM,MONTH
    ORDER BY WEEK_NUM DESC
  )

  --QUERY MỚI
    , TABLE_WEEK_03 AS (
    SELECT L.WEEK_NUM, L.MONTH, L.REVENUE_A_F AS TOTAL_A_F, L.REVENUE_A_F/R.TOTAL_REVENUE AS PERCENTAGE_RETENTION_REVENUE FROM TABLE_WEEK_01 AS L
    LEFT JOIN TABLE_WEEK_02 AS R
    ON RIGHT(L.WEEK_NUM,1) = RIGHT(R.WEEK_NUM,1)
    AND L.MONTH = DATE_ADD(R.MONTH, INTERVAL 1 MONTH)
    
    ORDER BY L.WEEK_NUM DESC
    
  )
  , TABLE_WEEK_04 AS (
    SELECT L.WEEK_NUM, L.MONTH, L.REVENUE_A_F AS TOTAL_A_F, L.REVENUE_A_F/R.TOTAL_REVENUE AS PERCENTAGE_RETENTION_REVENUE FROM TABLE_WEEK_01 AS L
    LEFT JOIN TABLE_WEEK_02 AS R
    ON RIGHT(L.WEEK_NUM,1) = RIGHT(R.WEEK_NUM,1)
    AND L.MONTH = DATE_ADD(R.MONTH, INTERVAL 1 MONTH)

    ORDER BY L.WEEK_NUM DESC
    LIMIT 6
  ),

  TABLE_WEEK_1 AS(
    SELECT CONCAT('T', RIGHT(L.WEEK_NUM, 5)) AS PERIOD, L.TOTAL_A_F AS TOTAL_AF, L.PERCENTAGE_RETENTION_REVENUE  AS RATIO,
    R.TOTAL_A_F AS TOTAL_AF_PY, R.PERCENTAGE_RETENTION_REVENUE AS RATIO_PREVIOUS_YEAR, ROW_NUMBER() OVER (ORDER BY L.WEEK_NUM) AS INDEX_
    FROM TABLE_WEEK_04 AS L
    LEFT JOIN TABLE_WEEK_03 AS R
    ON RIGHT(L.WEEK_NUM, 5) = RIGHT(R.WEEK_NUM, 5)

    AND L.MONTH = DATE_ADD(R.MONTH, INTERVAL 1 YEAR)
    ORDER BY L.WEEK_NUM ASC
  )
  , EMPTY_TABLE AS(
    SELECT ' ' AS PERIOD, CAST(NULL AS INT)  AS TOTAL_AF,CAST(NULL AS INT)  AS RATIO,  CAST(NULL AS INT)  AS TOTAL_AF_PY, CAST(NULL AS INT) AS RATIO_PREVIOUS_YEAR, 7 AS INDEX_
  )
  , TABLE_WEEK_FINAL AS(
    SELECT * FROM TABLE_WEEK_1
    UNION ALL
    SELECT *  FROM EMPTY_TABLE
  )

--TABLE THÁNG
  
  ,TABLE_MONTH_01 AS(
  SELECT MONTH, SUM(REVENUE) AS TOTAL_A_F FROM MY_TEMP_3
  GROUP BY MONTH
  ORDER BY MONTH DESC)

  , TABLE_MONTH_02 AS(
  SELECT MONTH, SUM(REVENUE) AS TOTAL FROM MY_TEMP_4
  GROUP BY MONTH
  ORDER BY MONTH DESC
  )

--Table 1: MTD/M-1
  ,TABLE_MONTH_03 AS (
  SELECT L.*, R.MONTH AS PREVIOUS_MONTH,R.TOTAL AS PREVIOUS_MONTH_TOTAL,L.TOTAL_A_F/R.TOTAL AS RATIO  FROM TABLE_MONTH_01 AS L
  LEFT JOIN TABLE_MONTH_02 AS R
  ON 
  L.MONTH = DATE_ADD(R.MONTH, INTERVAL 1 MONTH)
  ORDER BY L.MONTH ASC
  )


  ,TABLE_MONTH_FINAL AS(
    SELECT CONCAT('T', EXTRACT(MONTH FROM L.MONTH)) AS PERIOD, L.TOTAL_A_F AS TOTAL_AF,L.RATIO, 
    R.TOTAL_A_F AS TOTAL_AF_PY, R.RATIO AS RATIO_PREVIOUS_YEAR,
    ROW_NUMBER() OVER (ORDER BY L.MONTH) + 7 AS RATIO_ 
    FROM TABLE_MONTH_03 AS L 
    LEFT JOIN TABLE_MONTH_03 AS R
    ON L.MONTH = DATE_ADD(R.MONTH, INTERVAL 1 YEAR)
    WHERE EXTRACT(YEAR FROM L.MONTH) = (SELECT EXTRACT(YEAR FROM MAX(MONTH)) FROM TABLE_MONTH_03) 
    ORDER BY L.MONTH DESC
  )


SELECT * FROM TABLE_WEEK_FINAL
UNION ALL 
SELECT * FROM TABLE_MONTH_FINAL 
ORDER BY INDEX_ ASC




